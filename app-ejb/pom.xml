<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>logiweb-ee</artifactId>
        <groupId>com.tsystems.loginov</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>app-ejb</artifactId>
    <packaging>war</packaging>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- Servlet 3.1 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Import the CDI API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JSF API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>javax.faces</groupId>-->
        <!--<artifactId>jsf-impl</artifactId>-->
        <!--<version>1.2_15</version>-->
        <!--</dependency>-->


        <!-- Import the EJB API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>ejb-api</artifactId>
            <version>3.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Deltaspike API. We use compile scope as we need compile against its API -->
        <!--<dependency>-->
            <!--<groupId>org.apache.deltaspike.core</groupId>-->
            <!--<artifactId>deltaspike-core-api</artifactId>-->
            <!--<version>0.6</version>-->
            <!--<scope>compile</scope>-->
        <!--</dependency>-->

        <!-- Deltaspike Impl. we use runtime scope as we need its implementation dependencies only on runtime -->
        <!--<dependency>-->
            <!--<groupId>org.apache.deltaspike.core</groupId>-->
            <!--<artifactId>deltaspike-core-impl</artifactId>-->
            <!--<version>0.6</version>-->
            <!--<scope>runtime</scope>-->
        <!--</dependency>-->

        <!-- Deltaspike Security Module API. We use compile scope as we need to compile against its API -->
        <!--<dependency>-->
            <!--<groupId>org.apache.deltaspike.modules</groupId>-->
            <!--<artifactId>deltaspike-security-module-api</artifactId>-->
            <!--<version>0.6</version>-->
            <!--<scope>compile</scope>-->
        <!--</dependency>-->

        <!-- Deltaspike Security Impl. we use runtime scope as we need its implementation dependencies only on runtime -->
        <!--<dependency>-->
            <!--<groupId>org.apache.deltaspike.modules</groupId>-->
            <!--<artifactId>deltaspike-security-module-impl</artifactId>-->
            <!--<version>0.6</version>-->
            <!--<scope>runtime</scope>-->
        <!--</dependency>-->

        <!-- Import the PicketLink API, we deploy this as library with the application, and can compile against it -->
        <dependency>
            <groupId>org.picketlink</groupId>
            <artifactId>picketlink-api</artifactId>
            <version>2.7.0.Final</version>
        </dependency>


        <!-- Import the PicketLink implementation, we deploy this as library with the application, but can't compile against it -->
        <dependency>
            <groupId>org.picketlink</groupId>
            <artifactId>picketlink-impl</artifactId>
            <version>2.7.0.Final</version>
            <scope>runtime</scope>
        </dependency>

        <!-- MySQL driver 5.1.36 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.36</version>
        </dependency>

        <!-- HSQLDB driver 2.3.1 -->
        <!--<dependency>-->
            <!--<groupId>org.hsqldb</groupId>-->
            <!--<artifactId>hsqldb</artifactId>-->
            <!--<version>2.3.1</version>-->
        <!--</dependency>-->

        <!-- Hibernate Core 4.3.5.Final -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.3.5.Final</version>
        </dependency>

        <!-- JUnit 4.12 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>logiweb-rest</finalName>
        <plugins>
            <!-- Changing JVM from default 1.6 (bundled with IDEA's Spring MVC) to 1.7 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
